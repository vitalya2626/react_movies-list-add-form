{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","values","errors","handleChange","event","target","name","value","setState","handleSubmit","preventDefault","handleValidation","props","onAdd","resetForm","this","isValid","push","regex","test","onSubmit","htmlFor","type","placeholder","onChange","error","onClick","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cfca7a88.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './MovieCard.scss';\r\n\r\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\r\n  <div className=\"card\">\r\n    <div className=\"card-image\">\r\n      <figure className=\"image is-4by3\">\r\n        <img\r\n          src={imgUrl}\r\n          alt=\"Film logo\"\r\n        />\r\n      </figure>\r\n    </div>\r\n    <div className=\"card-content\">\r\n      <div className=\"media\">\r\n        <div className=\"media-left\">\r\n          <figure className=\"image is-48x48\">\r\n            <img\r\n              src=\"images/imdb-logo.jpeg\"\r\n              alt=\"imdb\"\r\n            />\r\n          </figure>\r\n        </div>\r\n        <div className=\"media-content\">\r\n          <p className=\"title is-8\">{title}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        {description}\r\n        <br />\r\n        <a href={imdbUrl}>IMDB</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nMovieCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  imgUrl: PropTypes.string.isRequired,\r\n  imdbUrl: PropTypes.string.isRequired,\r\n};\r\n\r\nMovieCard.defaultProps = {\r\n  description: '',\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './MoviesList.scss';\r\nimport { MovieCard } from '../MovieCard';\r\n\r\nexport const MoviesList = ({ movies }) => (\r\n  <div className=\"movies\">\r\n    {movies.map(movie => (\r\n      <MovieCard key={movie.imdbId} {...movie} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      description: PropTypes.string,\r\n      imgUrl: PropTypes.string.isRequired,\r\n      imdbUrl: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nMoviesList.defaultProps = {\r\n  movies: [],\r\n};\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    values: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n    errors: [],\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (this.handleValidation()) {\n      this.props.onAdd(this.state);\n\n      this.resetForm();\n    }\n  }\n\n  resetForm = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  handleValidation() {\n    const {\n      title,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    const errors = [];\n\n    let isValid = true;\n\n    if (!title) {\n      isValid = false;\n      errors.push('Title is empty');\n    }\n\n    if (!imgUrl) {\n      isValid = false;\n      errors.push('Image URL is empty');\n    }\n\n    if (!imdbUrl) {\n      isValid = false;\n      errors.push('IMDB URL is empty');\n    }\n\n    if (!imdbId) {\n      isValid = false;\n      errors.push('IMDB ID is empty');\n    }\n\n    // eslint-disable-next-line no-unused-vars,max-len\n    const regex = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    // eslint-disable-next-line\n    if (!regex.test(imdbUrl)) {\n      isValid = false;\n      errors.push('IMDB URL is not valid');\n    }\n\n    // eslint-disable-next-line\n    if (!regex.test(imgUrl)) {\n      isValid = false;\n      errors.push('ImgUrl is not valid');\n    }\n\n    this.setState({\n      errors,\n    });\n\n    return isValid;\n  }\n\n  render() {\n    const { title, description, imgUrl, imdbUrl, imdbId, errors } = this.state;\n\n    return (\n      <form\n        className=\"form\"\n        onSubmit={this.handleSubmit}\n      >\n\n        <label htmlFor=\"text\" className=\"label\">\n          <h2>Movie Title</h2>\n\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Name\"\n            value={title}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <label htmlFor=\"description\" className=\"label\">\n          <h2>Movie description</h2>\n\n          <input\n            type=\"text\"\n            name=\"description\"\n            placeholder=\"Description\"\n            value={description}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <label htmlFor=\"imgUrl\" className=\"label\">\n          <h2>IMG Url</h2>\n          <input\n            type=\"text\"\n            name=\"imgUrl\"\n            placeholder=\"Image URL\"\n            value={imgUrl}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <label htmlFor=\"imdbUrl\" className=\"label\">\n          <h2>IMDB Url</h2>\n          <input\n            type=\"text\"\n            name=\"imdbUrl\"\n            placeholder=\"IMDB URL\"\n            value={imdbUrl}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <label htmlFor=\"imdbId\" className=\"label\">\n          <h2>IMDB ID</h2>\n          <input\n            type=\"text\"\n            name=\"imdbId\"\n            placeholder=\"IMDB ID\"\n            value={imdbId}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <ol className=\"errors\">\n          {errors.map(error => (\n            <li>{error}</li>\n          ))}\n        </ol>\n\n        <button type=\"submit\">Submit</button>\n        <button type=\"button\" onClick={this.resetForm}>Reset</button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}